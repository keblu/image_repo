library("svglite")
library("yaml")
source("simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 2
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question()
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("\nanswer_plot/Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
Generate_i_question()
library("svglite")
library("yaml")
source("simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 2
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question()
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("\/Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
#Generate_i_question()
library("svglite")
library("yaml")
source("simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 2
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question()
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("/Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
#Generate_i_question()
library("svglite")
library("yaml")
source("simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 2
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question()
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
#Generate_i_question()
library("svglite")
library("yaml")
source("simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question()
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
#Generate_i_question()
n.obs=1
CF = round(rnorm(n.obs,100,100),2)
period = sample(1:30,size = n.obs,replace = FALSE)
CF = CF[order(period,decreasing = FALSE)]
period = period[order(period,decreasing = FALSE)]
period_to =  sample(1:30,size = 1,replace = FALSE)
i = round(runif(1,0.01,0.15),5)
m = sample(c(1,4,2,12),1)
action = ifelse(CF > 0,yes = "déposer",no = "retirer")
freq = ifelse(m == 12,yes = "mensuellement",
no = ifelse(m == 4,yes = "trimestriellement",
no = ifelse(m == 2,yes = "semi-annuellement",no = "annuellement")))
Q = paste0("Vous avez l'intention de ",
paste0(action[1:(length(CF)-1)],
" ", CF[1:(length(CF)-1)],
" dollars ", " dans ",12/m*period[1:(length(CF)-1)]," mois ","",collapse = ", ")," et ",
action[(length(CF))],
" ", CF[length(CF)],
" dollars "," dans ",12/m*period[(length(CF))],
" mois dans (de) votre compte de banque. Quel est la valeur de ces flux monétaires au mois ", 12/m*period_to,"  si votre compte de banque vous offre un taux d'intérêt de ", i*100,"%" , " capitalisé ",freq,".")
Q
action
Q = paste0("Vous avez l'intention de ",
paste0(action[1:(length(CF)-1)],
" ", CF[1:(length(CF)-1)],
" dollars ", " dans ",12/m*period[1:(length(CF)-1)]," mois ","",collapse = ", "),
" dans (de) votre compte de banque. Quel est la valeur de ces flux monétaires au mois ", 12/m*period_to,"  si votre compte de banque vous offre un taux d'intérêt de ", i*100,"%" , " capitalisé ",freq,".")
Q
Q = paste0("Vous avez l'intention de ",
paste0(action[1:(length(CF)-1)],
" ", CF[1:(length(CF)-1)],
" dollars ", " dans ",12/m*period[1:(length(CF)-1)]," mois ","",collapse = ", "),
" dans (de) votre compte de banque. Quel est la valeur de ce flux monétaires au mois ", 12/m*period_to,"  si votre compte de banque vous offre un taux d'intérêt de ", i*100,"%" , " capitalisé ",freq,".")
Q
n.obs = sample(1:5,size = 1)
CF = round(rnorm(n.obs,100,100),2)
period = sample(0:30,size = n.obs,replace = FALSE)
CF = CF[order(period,decreasing = FALSE)]
period = period[order(period,decreasing = FALSE)]
period_to =  sample(0:30,size = 1,replace = FALSE)
i = round(runif(1,0.01,0.15),5)
m = sample(c(1,4,2,12),1)
action = ifelse(CF > 0,yes = "déposer",no = "retirer")
freq = ifelse(m == 12,yes = "mensuellement",
no = ifelse(m == 4,yes = "trimestriellement",
no = ifelse(m == 2,yes = "semi-annuellement", no = "annuellement")))
if(length(CF) == 1){
Q = paste0("Vous avez l'intention de ",
paste0(action[1:(length(CF)-1)],
" ", CF[1:(length(CF)-1)],
" dollars ", " dans ",12/m*period[1:(length(CF)-1)]," mois ","",collapse = ", "),
" dans (de) votre compte de banque. Quel est la valeur de ce flux monétaires au mois ", 12/m*period_to,"  si votre compte de banque vous offre un taux d'intérêt de ", i*100,"%" , " capitalisé ",freq,".")
} else {
Q = paste0("Vous avez l'intention de ",
paste0(action[1:(length(CF)-1)],
" ", CF[1:(length(CF)-1)],
" dollars ", " dans ",12/m*period[1:(length(CF)-1)]," mois ","",collapse = ", ")," et ",
action[(length(CF))],
" ", CF[length(CF)],
" dollars "," dans ",12/m*period[(length(CF))],
" mois dans (de) votre compte de banque. Quel est la valeur de ces flux monétaires au mois ", 12/m*period_to,"  si votre compte de banque vous offre un taux d'intérêt de ", i*100,"%" , " capitalisé ",freq,".")
}
Q
R = function_simple_multiple(CF = CF,
period = period,
period_to =  period_to,
i = i,
m = m,
plot = TRUE)
138/2
138/2
library("svglite")
library("yaml")
source("simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question()
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
#Generate_i_question()
library("svglite")
library("yaml")
source("simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
library("svglite")
library("yaml")
source("../../simple_2_mulitple.R")
setwd("~/GitHub/image_repo/seance2/simple")
library("svglite")
library("yaml")
source("../../simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
library("svglite")
library("yaml")
source("../../simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question(n.obs = 1)
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
library("svglite")
library("yaml")
source("../../simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question(max.obs = 5)
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
library("svglite")
library("yaml")
source("../../simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question(n.obs = 1)
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
setwd("~/GitHub/image_repo/seance2/harder")
library("svglite")
library("yaml")
source("../../simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question(max.obs = 5)
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
setwd("~/GitHub/image_repo/seance2/simple")
library("svglite")
library("yaml")
source("../../simple_2_mulitple.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_multiple_question(max.obs = 2)
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
setwd("~/GitHub/image_repo/seance2/find_i")
library("svglite")
library("yaml")
source("../../simple_3_find_i.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
library("svglite")
library("yaml")
source("../../simple_3_find_i.R")
yaml::read_yaml("bank.yaml")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
library("svglite")
library("yaml")
source("../../simple_3_find_i.R")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_i_question()
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
setwd("~/GitHub/image_repo/seance2/find_i")
library("svglite")
library("yaml")
source("../../simple_3_find_i.R")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_i_question()
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
yaml::write_yaml(base_list,file = "bank.yaml")
library("svglite")
library("yaml")
source("../../simple_3_find_i.R")
n.question = 100
base_list = list("pictures base directory" =  "answer_plot",
"categories" = list(list(
"name" = "seance2",
questions = list())
)
)
for(i in 1:n.question){
set.seed(i)
svglite(paste0("answer_plot/Q_",i,".svg"), width = 12, height = 8)
question = Generate_i_question()
base_list$categories[[1]]$questions[[i]] = list()
base_list$categories[[1]]$questions[[i]]$name = paste0("Question ", i)
base_list$categories[[1]]$questions[[i]]$class = "Numerical"
base_list$categories[[1]]$questions[[i]]$statement =base::enc2utf8(question$question)
base_list$categories[[1]]$questions[[i]]$solution = list(value = question$response,
error = 0.1)
base_list$categories[[1]]$questions[[i]]$feedback = paste0("Q_",i,".svg\n")
dev.off()
}
